datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model Profile{
  id String @id @default(uuid())
  userId String @unique
  name String
  imageUrl String @db.Text
  email String @unique @db.Text

  server Server[]
  member Member[]
  channel Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server{
  id String @id @default(uuid())
  name String
  imageUrl String @db.Text
  inviteCode String @unique 
  
  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  members Member[]
  channels Channel[]

  CreatedAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  }

  enum MemberRole {
    ADMIN
    MODERATOR
    GUEST
  }

  model Member{
    id String @id @default(uuid())
    role MemberRole @default(GUEST)

    ProfileId String
    Profile Profile @relation(fields: [ProfileId], references: [id], onDelete: Cascade)


    ServerId String
    Server Server @relation(fields: [ServerId], references: [id], onDelete: Cascade)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt


    @@index([ProfileId])
    @@index([ServerId])
  }

  enum ChannelType {
    TEXT
    AUDIO
    VIDEO
  }

  model Channel{
    id String @id @default(uuid())
    name String
    type ChannelType @default(TEXT)

    profileId String
    profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

    serverId String
    server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([profileId])
    @@index([serverId])
    
  }